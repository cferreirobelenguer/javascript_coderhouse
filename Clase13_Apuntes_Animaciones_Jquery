

ANIMACIONES CON JQUERY
________________________

JQuery provee métodos para incorporar efectos y animaciones a los elementos del DOM.
El objetivo es combinar las diferentes variantes entre sí para darle a una web o app dinamismo y movimiento.


SHOW
_____

El método show()muestra un elemento del DOM. Suponiendo que se encuentre oculto mediante css (display:none), 
al seleccionarlo con JQuery y ejecutar show(), el elemento aparecerá en la pantalla.

//Agregemos <h3> con jQuery ocultos con  style="display: none;"
$("body").prepend('<h3  style="display: none" >¡Hola Coder1!</h3>');
$("body").prepend('<h3  style="display: none" >¡Hola Coder2!</h3>');
//Mostramos con show() todos los <h3>
$("h3").show(); 


HIDE
____

El método hide()es la inversa a show. Suponiendo que se encuentre visible mediante css, 
al seleccionarlo con JQuery y ejecutar hide(), el elemento desaparecerá de la pantalla.

//Agregamos <h3> con jQuery
$("body").prepend('<h3>¡Hola Coder1!</h3>');
$("body").prepend('<h3>¡Hola Coder2!</h3>');
//Ocultamos con hide() todos los <h3>
$("h3").hide(); 


FADE IN
________

El método fadeIn()tiene el mismo fin que la función show, solo que en este caso, el elemento aparece con una transición. 
Es decir, que al llamar fedeIn el elemento empieza a aparecer de forma gradual, hasta  que esté completamente visible.

//Agreguemos <h3> con jQuery ocultos con  style="display: none;"
$("body").prepend('<h3  style="display: none" >¡Hola Coder1!</h3>');
$("body").prepend('<h3  style="display: none" >¡Hola Coder2!</h3>');
//Mostramos con fadeIn() todos los <h3>
$("h3").fadeIn();


FADE OUT
________

El método fadeOut()tiene el mismo fin que la función hide, solo que en este caso, 
el elemento desaparece con una transición. Es decir, que al llamar fedeOut el elemento empieza a desaparecer de forma gradual,
hasta  que esté completamente invisible.


//Agregemos <h3> con jQuery"
$("body").prepend('<h3>¡Hola Coder1!</h3>');
$("body").prepend('<h3>¡Hola Coder2!</h3>');
//Ocultamos con fadeOut() todos los <h3>
$("h3").fadeOut(); 


VELOCIDAD DEL FADE
__________________

Tanto para fadeOut()como fadeIn() se puede enviar un parámetro opcional para indicar la velocidad el fade. 
Se puede usar la palabra "slow" o "fast", o también un número en milisegundos para indicar la duración total de la transición.


CALLBACK DEL FADE
_________________

Tanto para fadeOut()como fadeIn() se le puede enviar un segundo parámetro opcional para indicar una función que se ejecutará cuando la animación termine.

//Agregamos <h3> con jQuery
$("body").prepend('<h3>¡Hola Coder1!</h3>');
//Ocultamos con fadeOut() todos los <h3>
$("h3").fadeOut("slow", function(){
    //Cuando termina de ocultarse el elemento lo mostramos nuevamente
    $("h3").fadeIn(1000);
}); 


SLIDE DOWN
___________

El método slideDown()hace aparecer al elemento haciendo una transición hacia abajo. Es una alternativa al fadeIn(). 
Se puede enviar los mismos parámetros de velocidad y callback que en fadeIn y fadeOut.

//Agregamos un botón y un div con jQuery
$("body").prepend('<button id="btn1">Mostrar</button>');
$("body").prepend(`<div id="div1" style="height: 120px">
                        <h3>¡Hola Coder!</h3>
                        <h4>Sorpresa 2</h4>
                    </div>`);
//Usamos slideDown sobre div1 en respuesta al click del boton btn1
$("#btn1").click(() => { 
    $("#div1").slideDown("fast");
});


SLIDE UP
________

El método slideUp() hace desaparecer al elemento haciendo una transición hacia arriba. Es una alternativa al fadeOut. 
Se puede enviar los mismos parámetros de velocidad y callback que en fadeIn y fadeOut.

//Agregamos un botón y un div con jQuery
$("body").prepend('<button id="btn1">Mostrar</button>');
$("body").prepend(`<div id="div1" style="height: 120px">
                        <h3>¡Hola Coder!</h3>
                        <h4>Sorpresa 2</h4>
                    </div>`);
//Usamos slideUp sobre div1 en respuesta al click del boton btn1
$("#btn1").click(() => { 
    $("#div1").slideUp("fast");
});


SLIDE TOGGLE
____________

El método slideToggle() hace aparecer o desaparecer el elemento mediante slide. 
En función de que el elemento esté visible o no, ejecuta slideUp, o slideDown.

//Agregamos un botón y un div con jQuery
$("body").prepend('<button id="btn1">Mostrar</button>');
$("body").prepend(`<div id="div1" style="height: 120px">
                        <h3>¡Hola Coder!</h3>
                        <h4>Sorpresa</h4>
                    </div>`);
//Usamos toggle sobre div1 en respuesta al click del botòn btn1
$("#btn1").click(() => { 
    $("#div1").toggle("fast");
});


MODIFICAR CSS
_____________

JQuery provee un método para aplicar cambios directos sobre el css del elemento. Llamando a css() podemos indicar la propiedad a modificar del elemento seleccionado.
 La sintaxis funciona así:  selector.css("propiedad-css","valor");


//Agregamos un parrafo con jQuery
$("body").prepend('<p class="titulo">Code House</p>');
//Modificamos las reglas CSS desde jQuery
$("p").css("background-color", "yellow");
$("p").css("width", "50%");
$(".titulo").css({  "color": "#ccc", 
                    "font-size": "40px", 
                    "borderLeft": "5px solid #ccc" });
                    
 
 ANIMATE
__________

El método animate() nos permite crear efectos de animación sobre cualquier propiedad CSS numérica . 
Se requiere como parámetro un objeto de propiedades CSS. Este objeto es similar al que se puede enviar al método .css(),
salvo que el rango de propiedades es más restrictivo.

//Agregamos un parrafo con jQuery
$("body").prepend('<p class="titulo">Code House</p>');
//Animamos sus propiedades CSS con animate
$(".titulo").animate({  left:'250px',
                        opacity:'0.5',
                        height:'150px',
                        width:'150px'   }, //1er parámetro propiedades
                        "slow",            //2do parámetro duración 
                        function(){        //3er parámetro callback
                            console.log("final de animación");
                        });




EJEMPLO:
//Agregamos una estructura con jQuery
$("body").prepend(`</div>
                        <a>Ir a contacto</a>
                        <p style="height: 800px"></p>
                        <section id="seccionContacto">
                           <h4>¡Somos Coders!</h4>
                        </section>
                   </div>`);
// Asociamos la animación al click en un elemento <a>
$('a').click( function(e) { 
    e.preventDefault();
    //Animamos sus propiedades CSS con animate
    $('html, body').animate({
        scrollTop: $("#seccionContacto").offset().top  
    }, 2000);
} );


ENCADENAR ANIMACIONES
______________________

Es posible encadenar métodos jQuery, lo cual permite definir una animación tras otra empleando en una única declaración.
Es recomendable emplear esta forma si es necesario asociar múltiples animaciones consecutivas a un mismo elemento. Para ahorrarnos consultas al DOM.

//Agreguemos un párrafo con jQuery
$("body").prepend('<p id="p1">Coder House</p>');
//Declaración de métodos encadenados
$("#p1").css("color", "red")
        .slideUp(2000)
        .slideDown(2000);
        
 MÉTODO DELAY
_____________

El método delay() nos permite retrasar la ejecución de comandos encadenados. 
Puede utilizarse para establecer un tiempo de espera en milisegundos entre una animación y la siguiente.

//Agregamos un párrafo con jQuery
$("body").prepend('<p id="p1">Coder House</p>');
//Declaración de métodos encadenados
$("#p1").css("color", "red")
        .slideUp(2000)
        .delay(2000)
        .slideDown(2000);
        

EJEMPLO ANIMANDO LA COMPRA:

// Array de objetos para agregar información al DOM.
const productos = [{ id: 1,  nombre: "Arroz", precio: 125 },
{  id: 2,  nombre: "Fideo", precio: 70 },
{  id: 3,  nombre: "Pan"  , precio: 50},
{  id: 4,  nombre: "Flan" , precio: 100}];
// Asociamos el evento click en ready luego del DOM Generado
$(document).ready(function () {
    $(".btnComprar").click(function (e) { 
        //Obtenemos hijos del padre <div> desde el target
        let hijos = $(e.target).parent().children();
        //Primer input, valor de ID oculto
        console.log(hijos[0].value);
        //Animaciòn de respuesta de compra
        $(e.target).parent().slideUp("slow");
    });
});
// Recorremos el array con for..of
for (const producto of productos) {
    //Por cada producto ademas de los datos agregamos un botón 
    $("#app").append(`<div>
                        <input value="${producto.id}" type="hidden">
                        <h4>  Producto: ${producto.nombre}</h4>
                        <b> $ ${producto.precio}</b>
                        <button class="btnComprar">Comprar</button>
                    </div>`);
}







